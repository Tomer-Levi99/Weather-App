cmake_minimum_required(VERSION 3.27)
project(FinalProject)

set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Set OpenSSL root directory
set(OPENSSL_ROOT_DIR "C:/Users/Lenovo/CLionProjects/C++_Final_Project/openssl-3/x64")

# Set OpenSSL include and library directories explicitly
set(OPENSSL_INCLUDE_DIR "${OPENSSL_ROOT_DIR}/include")
set(OPENSSL_LIBRARIES "${OPENSSL_ROOT_DIR}/lib")

# Find OpenSSL package
find_package(OpenSSL REQUIRED)

# Set GLFW directory
set(GLFW_DIR "C:/Users/Lenovo/CLionProjects/C++_Final_Project/glfw-3.4")

# ImGui Configuration
set(IMGUI_DIR "C:/Users/Lenovo/CLionProjects/C++_Final_Project/imgui-1.90.9")

# Add GLFW as a subdirectory
add_subdirectory(${GLFW_DIR})

# Add executable
add_executable(FinalProject main.cpp
        ${IMGUI_DIR}/imgui.cpp
        ${IMGUI_DIR}/imgui_demo.cpp
        ${IMGUI_DIR}/imgui_draw.cpp
        ${IMGUI_DIR}/imgui_tables.cpp
        ${IMGUI_DIR}/imgui_widgets.cpp
        ${IMGUI_DIR}/backends/imgui_impl_glfw.cpp
        ${IMGUI_DIR}/backends/imgui_impl_opengl3.cpp
)

# Include directories
target_include_directories(FinalProject PRIVATE
        ${OPENSSL_INCLUDE_DIR}
        ${IMGUI_DIR}
        ${IMGUI_DIR}/backends
        ${GLFW_DIR}/include
)

# Link libraries
target_link_libraries(FinalProject PRIVATE
        OpenSSL::SSL
        OpenSSL::Crypto
        ws2_32
        crypt32
        bcrypt
        glfw
        opengl32
)

# Add compiler definitions
target_compile_definitions(FinalProject PRIVATE
        CPPHTTPLIB_OPENSSL_SUPPORT
)

# Copy OpenSSL DLLs to the output directory
add_custom_command(TARGET FinalProject POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
        "${OPENSSL_ROOT_DIR}/bin/libssl-3-x64.dll"
        "${OPENSSL_ROOT_DIR}/bin/libcrypto-3-x64.dll"
        $<TARGET_FILE_DIR:FinalProject>
)